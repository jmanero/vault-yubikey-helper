---
name: build
on:
  pull_request:
  workflow_dispatch:

  release:
    types: [published]

permissions:
  contents: write # Publish release assets
  # packages: write

jobs:
  linux_amd64:
    runs-on: ubuntu-latest
    container: golang:bookworm
    steps:
      - uses: actions/checkout@v4

      - name: Build Golang
        run: |
          apt-get update
          apt-get install -y build-essential libssl-dev libpcsclite-dev libykpiv-dev
          go build -v -buildvcs=false -o vault-yubikey-helper ./cmd
      
      - name: Publish Artifact to Release
        if: ${{ github.event_name == 'release' }}
        run: |
          tar -czvf asset.tar.gz vault-yubikey-helper

          asset=vault-yubikey-helper_${{ github.event.release.tag_name }}_linux_amd64.tar.gz
          echo "Publishing $asset to release ${{ github.event.release.name }} [tag: ${{ github.event.release.tag_name }}]"

          curl -L -X POST --fail-with-body \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary "@asset.tar.gz" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets?name=$asset"

  darwin_amd64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Golang
        run: |
          brew install pkg-config yubico-piv-tool
          go build -v -buildvcs=false -o vault-yubikey-helper ./cmd

      - name: Publish Artifact to Release
        if: ${{ github.event_name == 'release' }}
        run: |
          tar -czvf asset.tar.gz vault-yubikey-helper

          asset=vault-yubikey-helper_${{ github.event.release.tag_name }}_darwin_amd64.tar.gz
          echo "Publishing $asset to release ${{ github.event.release.name }} [tag: ${{ github.event.release.tag_name }}]"

          curl -L -X POST --fail-with-body \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary "@asset.tar.gz" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets?name=$asset"
